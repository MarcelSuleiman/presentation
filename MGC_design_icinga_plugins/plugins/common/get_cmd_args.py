import argparse


def compose_input_arguments():
    parser = argparse.ArgumentParser()
    # parser.add_argument(
    #     "-FEM", '--fio_error_msgg',
    #     help='Default Message Group of events generated in case of FIO error',
    #     type=str,
    #     required=True
    # )
    # parser.add_argument(
    #     "-FES", '--fio_error_sev',
    #     help='Default severity of events generated in case of FIO error',
    #     required=True
    # )
    # parser.add_argument(
    #     "-MSV", '--maximum_severity',
    #     help='Maximum severity',
    #     required=True
    # )
    # parser.add_argument(
    #     "-PDM", '--plugin_default_msgg',
    #     help='Default severity of events generated by plugin',
    #     required=True
    # )
    # parser.add_argument(
    #     "-PEM", '--plugin_error_msgg',
    #     help='Default Message Group of events generated in case of plugin error',
    #     type=str,
    #     required=True
    # )
    # parser.add_argument(
    #     "-PES", '--plugin_error_sev',
    #     help='Default severity of events generated in case of plugin error',
    #     required=True
    # )
    parser.add_argument(
        '-C', '--config',
        help='Configuration string (JSON format) to specify the services to be monitored',
        type=str,
        required=True
    )
    # parser.add_argument(
    #     "-PT", "--plugin_timeout",
    #     help="Plugin timeout",
    #     type=int,
    #     required=False,
    #     default=50
    # )
    # parser.add_argument(
    #     "-D", "--debug_level",
    #     help="Plugin debug",
    #     required=False,
    #     choices=["0", "1"]
    # )
    # parser.add_argument(
    #     "-S", "--service",
    #     help="Icinga service associated with the plugin",
    #     required=False,
    # )

    return parser.parse_args()
